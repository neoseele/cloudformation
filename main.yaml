# MegaStack name. All stacks in CF get prefixed with this name.
---
A1:
  Name: &Name A1
  region: &Region ap-southeast-2
  ServicePhase: &ServicePhase Dev
  KeyName: &KeyName nmiao
  VpcCidrRange: &VpcCidrRange 10.0.0.0/16
  ExternalLoadBalancerA: &ExternalLoadBalancerA 10.0.0.0/24
  ExternalLoadBalancerB: &ExternalLoadBalancerB 10.0.128.0/24
  ExternalA: &ExternalA 10.0.1.0/24
  ExternalB: &ExternalB 10.0.129.0/24
  ApplicationA: &ApplicationA 10.0.2.0/24
  ApplicationB: &ApplicationB 10.0.130.0/24
  DatabaseA: &DatabaseA 10.0.3.0/24
  DatabaseB: &DatabaseB 10.0.131.0/24

  stacks:
    VPC:
      cf_template: vpc.json
      depends:
      params:
        CIDR:
          value: *VpcCidrRange
        ServicePhase:
          value: *ServicePhase
    SubnetAzA:
      cf_template: subnet.json
      depends:
        - VPC
      params:
        AvailabilityZone:
          value: A
        VPC:
          source: VPC
          type: resource
          variable: VPC
        ExternalRouteTable:
          source: VPC
          type: resource
          variable: ExternalRouteTable
        InternalRouteTable:
          source: VPC
          type: resource
          variable: InternalRouteTable
        ExternalAcl:
          source: VPC
          type: resource
          variable: ExternalAcl
        InternalAcl:
          source: VPC
          type: resource
          variable: InternalAcl
        ExternalCIDR:
          value: *ExternalA
        ExternalLoadBalancerCIDR:
          value: *ExternalLoadBalancerA
        ApplicationCIDR:
          value: *ApplicationA
        DatabaseCIDR:
          value: *DatabaseA
        ServicePhase:
          value: *ServicePhase
    SubnetAzB:
      cf_template: subnet.json
      depends:
        - VPC
      params:
        AvailabilityZone:
          value: B
        VPC:
          source: VPC
          type: resource
          variable: VPC
        ExternalRouteTable:
          source: VPC
          type: resource
          variable: ExternalRouteTable
        InternalRouteTable:
          source: VPC
          type: resource
          variable: InternalRouteTable
        ExternalAcl:
          source: VPC
          type: resource
          variable: ExternalAcl
        InternalAcl:
          source: VPC
          type: resource
          variable: InternalAcl
        ExternalCIDR:
          value: *ExternalB
        ExternalLoadBalancerCIDR:
          value: *ExternalLoadBalancerB
        ApplicationCIDR:
          value: *ApplicationB
        DatabaseCIDR:
          value: *DatabaseB
        ServicePhase:
          value: *ServicePhase
    NAT:
      cf_template: nat.json
      depends:
        - SubnetAzA
      params:
        AvailabilityZone:
          value: A
        VPC:
          source: VPC
          type: resource
          variable: VPC
        ExternalSubnet:
          source: SubnetAzA
          type: resource
          variable: ExternalSubnet
        InternalRouteTable:
          source: VPC
          type: resource
          variable: InternalRouteTable
        KeyName:
          value: *KeyName
    App:
      cf_template: app.json
      depends:
        - SubnetAzA
        - SubnetAzB
      params:
        VPC:
          source: VPC
          type: resource
          variable: VPC
        LoadBalancerSubnets:
          - source: SubnetAzA
            type: resource
            variable: ExternalLoadBalancerSubnet
          - source: SubnetAzB
            type: resource
            variable: ExternalLoadBalancerSubnet
        DatabaseSubnets:
          - source: SubnetAzA
            type: resource
            variable: DatabaseSubnet
          - source: SubnetAzB
            type: resource
            variable: DatabaseSubnet
        ApplicationSubnets:
          - source: SubnetAzA
            type: resource
            variable: ApplicationSubnet
          - source: SubnetAzB
            type: resource
            variable: ApplicationSubnet
        NatSecurityGroup:
          source: NatA
          type: resource
          variable: NatSecurityGroup
        KeyName:
          value: *KeyName
        DBName:
          value: drupal
        DBUser:
          value: drupal
        DBPassword:
          value: drupal123
        MultiAZDatabase:
          value: "false"

